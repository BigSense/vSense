global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        user haproxy
        group haproxy
        daemon
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
        ssl-default-bind-options no-sslv3


defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client 50000
        timeout server 50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
        maxconn 4096
        mode http
        # Add x-forwarded-for header.
        option forwardfor
        option http-server-close

frontend public
  bind :80
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  redirect scheme https if !{ ssl_fc }
  bind :443 ssl crt {{ bigsense_pem }}

  # SNI based vhosts

  {% for s in haproxy['vhosts'] %}
  {% if s['subdomain'] is defined %}
  use_backend {{ s['subdomain'] }} if { hdr(host) -i {{ s['subdomain'] }}.{{ domain }} }
  {% endif %}
  {% endfor %}
  default_backend main

{% for s in haproxy['vhosts'] %}
{% if s['subdomain'] is defined %}
backend {{ s['subdomain'] }}
  server {{ s['subdomain'] }} {{ s['ip'] }}:{{ s['port'] }} check
{% else %}
backend main
  server main {{ s['ip'] }}:{{ s['port'] }} check
{% endif %}
{% endfor %}
