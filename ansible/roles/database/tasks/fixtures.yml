- name: check for initalized fixtures
  stat: path={{ fixture_init_file }}
  register: fixture_init

- name: copy fixtures
  copy: src={{ fixture_file }} dest={{ fixture_dest }}
  when: fixture_init.stat.exists == False

- name: install fixtures (mysql)
  shell: bzcat {{ fixture_dest }} | mysql --user=root {{ database.name }}
  when: fixture_init.stat.exists == False and database.type == "mysql"
  register: fixture_init_result

- name: install password file (pgsql)
  template: src=pgpass.j2 dest=/root/.pgpass mode=0600
  when: database.type == "postgres"

- name: fixtures role map (pgsql)
  template: src=gls-pgsql.j2 dest={{ fixture_pg_roles }} mode=0644
  when: fixture_init.stat.exists == False and database.type == "postgres"

- name: install role map (pgsql)
  shell: psql -d {{ database.name }} < {{ fixture_pg_roles }}
  when: fixture_init.stat.exists == False and database.type == "postgres"
  sudo_user: postgres

- name: install fixtures (pgsql)
  shell: bzcat {{ fixture_dest }} | pg_restore --clean -Fc -d {{ database.name }}
  when: fixture_init.stat.exists == False and database.type == "postgres"
  sudo_user: postgres
  register: fixture_init_result

- name: mark fixtured initalized
  file: path={{ fixture_init_file }} state=touch
  when: fixture_init_result|success