#!/usr/bin/env python3

from subprocess import Popen, PIPE
import os
import re
from glob import glob
import shutil

homedir = os.path.expanduser('~')
debs = os.path.join(homedir, 'debs')
rpms = os.path.join(homedir, 'rpms')
yums = os.path.join(homedir, 'yum')
init_systems = ['upstart', 'systemv', 'systemd']
components = ['nightly', 'testing', 'stable' ]
config = os.path.join(homedir, 'aptly.conf')

packages = { 'rpm' :
              { 'component_split' : '-', 'version_split' : '_' },
             'deb' :
              { 'component_split' : '_', 'version_split' : '-' }
           }

def repo_name(config_file):
    return os.path.basename(config_file).split('.')[0]

def run_cmd(cmd):
    print(cmd)
    proc = Popen(cmd,stdout=PIPE)
    for l in iter(proc.stdout.readline, b''):
        print(l.decode('utf-8'),end='')
    proc.communicate()

def stage_from_version(file):
    """
    versions that contain a dash or underscore (e.g. -1-2afe32) are nightly
    versions that do not end with a number (e.g alpha, beta) are testing
    all other version (e.g. 0.2.5) are stable. The ~upstart/~systemd are
    trimmed and ignored.
    """
    package_type = 'rpm' if file.endswith('.rpm') else 'deb'
    split_char = '-' if file.endswith('.rpm') else '_'
    version = file.split(packages[package_type]['component_split'])[1].split('~')[0]
    ends_with_number = re.search(r'\d+$', version)

    if packages[package_type]['version_split'] in version:
        return 'nightly'
    elif ends_with_number is None:
        return 'testing'
    else:
        return 'stable'

if __name__ == '__main__':

    for init_type in init_systems:
        for deb in glob( os.path.join(debs, init_type, '*.deb') ):
            component = stage_from_version(deb)
            run_cmd(('aptly','-config={}'.format(config),'repo','add','{}-{}'.format(init_type,component),deb))
            os.unlink(deb)

    # Can't get -passphrase-file to work
    passphrase = open(os.path.join(homedir,'bigsense.passphrase')).readlines()[0].strip()

    for init_type in init_systems:
        run_cmd(('aptly', '-passphrase={}'.format(passphrase), '-config={}'.format(config), 'publish', 'update', init_type))

    # RPMs

    for rpm in glob( os.path.join(rpms, '*.rpm')):
        component = stage_from_version(rpm)
        dest_dir = os.path.join(yums, component)

        if os.path.exists(os.path.join(dest_dir, os.path.basename(rpm))):
            os.unlink(rpm)
        else:
            # Sign RPM
            run_cmd(('/home/repoman/rpmsign',rpm))

            shutil.move(rpm, dest_dir)

    for stage in components:
        run_cmd(('createrepo', '--update', os.path.join(yums, stage)))
        run_cmd(('gpg', '--batch', '--yes', '--detach-sign', '--armor', '--passphrase', passphrase, os.path.join(yums, stage, 'repodata', 'repomd.xml')))