---
- name: install and configure linux repositories
  hosts: all
  sudo: true
  vars:
    repos:
      - { version: trusty, distribution: Ubuntu }
      - { version: wheezy, distribution: Debian }
    repoman_home: /home/repoman
    repo_init: "{{repoman_home}}/.repoinit"
    publish_init: "{{repoman_home}}/.published"
    timestamp: "{{ ansible_date_time.epoch }}"

  tasks:

  # add aptly repo
  - apt_key: keyserver=keys.gnupg.net id=2A194991
  - apt_repository: repo='deb http://repo.aptly.info/ squeeze main' state=present

  # Install packages
  - action: apt update_cache=yes
  - action: apt name=dpkg-sig
  - action: apt name=nginx
  - action: apt name=aptly

  # Create Repo Management User and set permissions
  - user: name=repoman generate_ssh_key=yes ssh_key_bits=1024 ssh_key_type=dsa comment="Repository Manager"
  - file: path=/home/repoman/debs state=directory owner=repoman group=vagrant mode=0775


  # Copy any new packages into the repo from our local environment
  - synchronize: src=work/debs dest={{repoman_home}} recursive=yes archive=no

  # Create aptly repo db
  - template: src=templates/aptly.conf.j2 dest={{ repoman_home }}/{{ item.version }}.aptly owner=root group=repoman mode=0644
    with_items: repos
  - command: aptly repo create -comment="bigsense repository" -config=/home/repoman/{{ item.version }}.aptly {{ item.version }} creates={{ repo_init }}
    with_items: repos
    register: create_repo
  - file: path={{ repo_init }} state=touch
    when: create_repo|success

  # Add debs to aptly
  - shell: ls -1 /home/repoman/debs/*.deb
    register: deb_files
  - command: aptly -config={{ repoman_home }}/{{ item[0].version }}.aptly repo add {{ item[0].version }} {{ item[1] }}
    with_nested:
      - repos
      - deb_files.stdout_lines

  #publish repo
  - shell: aptly -distribution={{ item.version }} -architectures=all -config={{ repoman_home }}/{{ item.version }}.aptly publish repo {{ item.version }} creates={{ publish_init }}
    with_items: repos
    register: publish_repo
  - file: path={{ publish_init }} state=touch
    when: publish_repo | success
  - shell: aptly -architectures=all -config={{ repoman_home }}/{{ item.version }}.aptly publish update {{ item.version }}
    with_items: repos

  # serve repo though nginx
  - template: src=templates/nginx.j2 dest=/etc/nginx/sites-available/repo owner=root group=root mode=0644
  - file: src=/etc/nginx/sites-available/repo dest=/etc/nginx/sites-enabled/repo owner=root group=root state=link
  - file: path=/etc/nginx/sites-enabled/default state=absent
  - service: name=nginx enabled=yes state=started
