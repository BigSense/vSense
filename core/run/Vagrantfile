# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

require './vagrantenv'
vars = VagrantEnv.new

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = vars.vbox_image('ubuntu')

  if vars.ssh_security_enabled?
    #TODO: have security role update environemnt.yml and check that instead
    config.ssh.private_key_path = [ File.join(ENV['HOME'], '.vagrant.d', 'insecure_private_key') , vars.ssh_identity_key_file()]
  end

  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  config.vm.define "database" do |database|
    database.vm.network :private_network, ip: vars.ip('database')
    database.vm.hostname = vars.hostname('database')
    database.hostmanager.aliases = vars.aliases('database')
    database.vm.provision "ansible" do |ansible|
      ansible.playbook = "ansible/database.yml"
    end
  end

  config.vm.define "bigsense" do |bigsense|

    bigsense.vm.box = vars.vbox_for_server('bigsense')
    bigsense.vm.network :private_network, ip: vars.ip('bigsense')
    bigsense.vm.hostname = vars.hostname('bigsense')
    bigsense.hostmanager.aliases = vars.aliases('bigsense')

    bigsense.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--memory", "2048"]
    end
    bigsense.vm.provider "libvirt" do |virt|
      virt.memory = 2048
      virt.cpus = 2
    end    
    bigsense.vm.provision "ansible" do |ansible|
      ansible.playbook = "ansible/bigsense.yml"
    end
  end

  config.vm.define "ltsense" do |ltsense|
    ltsense.vm.box = vars.vbox_for_server('ltsense')
    ltsense.vm.network :private_network, ip: vars.ip('ltsense')
    ltsense.vm.hostname = vars.hostname('ltsense')
    ltsense.hostmanager.aliases = vars.aliases('ltsense')
    ltsense.vm.provision "ansible" do |ansible|
      ansible.playbook = "ansible/ltsense.yml"
    end
  end

  #config.vm.define "win2012sql" do |win2012sql|
  #  config.vm.box = "Windows2012R2"
  #  config.vm.communicator = "winrm"
  #  config.vm.network "forwarded_port", host: 3389, guest: 3389
  #end

end
